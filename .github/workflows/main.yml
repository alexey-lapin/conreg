name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

jobs:
  build-jvm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Gradle build
        run: ./gradlew build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: |
            conreg-cli/build/libs/*.jar
          retention-days: 5

  release:
    runs-on: ubuntu-latest
    needs: [ build-jvm ]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Download Artifacts
        uses: actions/download-artifact@v3

#      - name: Prepare Linux Artifacts
#        run: |
#          cd app-native-linux
#          chmod +x sbapsd
#          tar -czf $(cat gradle-artifact.txt)-linux-amd64.tar.gz sbapsd
#
#      - name: Prepare Windows Artifacts
#        run: |
#          cd app-native-windows
#          zip $(cat gradle-artifact.txt)-windows-amd64.zip sbapsd.exe

      - name: Build Release Changelog
        id: build-release-changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/release-changelog-builder.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.build-release-changelog.outputs.changelog }}
          draft: true
          files: |
            app-jar/**/-all.jar
#            app-native-linux/*.tar.gz
#            app-native-windows/*.zip

#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Gradle publish
#        env:
#          OSSRH_USER: ${{ secrets.OSSRH_USER }}
#          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
#          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
#          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
#        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
